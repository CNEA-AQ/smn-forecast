# Entendimiento SCRIPT:

# grid.f : 
grid_init()
 - Define:




 - 
 - 
 - 

SCRIP_GridComputeArea()
 - 
 - 
 - 








confilctos entre grid_init (grid.f) y read_remap (remap_read.f):
              !vars grid.f (grid_init)  ! vars : read_remap:    
                                                                  
             [ ] grid1_dims             [x] grid1_dims         
             [ ] grid1_center_lat       [x] grid1_center_lat   
             [ ] grid1_center_lon       [x] grid1_center_lon   
             [ ] grid1_area             [x] grid1_area         
             [ ] grid1_area_in          [ ] 
             [ ] grid1_frac             [x] grid1_frac         
             [ ] grid1_mask             [x] grid1_mask         
             [ ]                        [ ] grid1_mask_int     
             [ ]  grid1_corner_lat      [x] grid1_corner_lat                     
             [ ]  grid1_corner_lon      [x] grid1_corner_lon                                                  
             [ ]  grid1_bound_box       [ ]
             [ ]  grid1_centroid_lat    [ ]
             [ ]  grid1_centroid_lon    [ ]
             [ ]                        [ ] grid1_add_map1    

             [ ] grid2_dims             [x] grid2_dims        
             [ ] grid2_center_lat       [x] grid2_center_lat  
             [ ] grid2_center_lon       [x] grid2_center_lon  
             [ ] grid2_area             [x] grid2_area        
             [ ] grid2_area_in          
             [ ] grid2_frac             [x] grid2_frac        
             [ ] grid2_mask             [x] grid2_mask        
             [ ]                        [ ] grid2_mask_int    
             [ ] grid2_corner_lat       [x] grid2_corner_lat  
             [ ] grid2_corner_lon       [x] grid2_corner_lon  
             [ ] grid2_bound_box        [ ]                   
             [ ] grid2_centroid_lat
             [ ] grid2_centroid_lon
             [ ]                        
             [ ]                        [ ] grid2_add_map1    
             [ ]                        [ ] wts_map1          
             [ ] imask
             [ ] special_polar_cell1
             [ ] special_polar_cell2

#### Conflictos read_remap (remap_read.f) y init_remap_vars (remap_vars.f)

              !init_remap_vars           !read_remap               
              [x] grid1_add_map1         [ ] grid1_add_map1        
              [ ] grid1_add_map2         [ ]                       
              [x] grid2_add_map1         [ ] grid1_add_map2        
              [ ] grid2_add_map2         [ ]                       
              [ ] wts_map1               [ ]
              [ ] wts_map2               [ ]



!init_remap_vars
         ! integer (SCRIP_i4), save ::
         !&      max_links_map1  ! current size of link arrays
         !&,     num_links_map1  ! actual number of links for remapping
         !&,     max_links_map2  ! current size of link arrays
         !&,     num_links_map2  ! actual number of links for remapping
         !&,     num_maps        ! num of remappings for this grid pair
         !&,     num_wts         ! num of weights used in remapping
         !&,     map_type        ! identifier for remapping method
         !&,     norm_opt        ! option for normalization (conserv only)
         !&,     resize_increment ! default amount to increase array size
         ! integer (SCRIP_i4), dimension(:), allocatable, save ::
         !&      grid1_add_map1, ! grid1 address for each link in mapping 1
         !&      grid2_add_map1, ! grid2 address for each link in mapping 1
         !&      grid1_add_map2, ! grid1 address for each link in mapping 2
         !&      grid2_add_map2  ! grid2 address for each link in mapping 2
         ! real (SCRIP_r8), dimension(:,:), allocatable, save ::
         !&      wts_map1, ! map weights for each link (num_wts,max_links)
         !&      wts_map2  ! map weights for each link (num_wts,max_links)


